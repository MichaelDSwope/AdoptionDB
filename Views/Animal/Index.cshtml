@model List<Animal>

<div class="text-center">
    <h1>Product List</h1>

    <h3><i>"Pets love unconditionally,can you? Please adopt."</i></h3>
</div>

<div class="row">
    <div class="text-center">
        <form asp-controller="Animal" asp-action="Index">
            <div class="input-group mb-3">
              <input name="searchTerm" type="text" class="form-control" placeholder="Search" aria-label="Recipient's username" aria-describedby="basic-addon2">
              <button type="Adopt">Adopt</button>
            </div>
        </form>
    </div>
</div>

<div class="row">
    @foreach(var animal in Model){
        <div class="col-3">
    <div class="card" style="width: 18rem;">
      <div class="card-body">
        <h5 class="card-title">@animal.Name</h5>
        <h6 class="card-subtitle mb-2 text-muted">@animal.Breed.ToString()</h6>
        <p class="card-text">@animal.Description</p>
        <a class="btn-primary btn" asp-controller="Animal" asp-action="GetById" asp-route-id=@animal.Id>Details</a>
      </div>
    </div>
    </div>
    }
</div>

    <!--In results view, display all animals that match the breed. Each one should contain a button that allows the user to “adopt” the animal. 
        This will call the adopt action that will remove the animal from the database then will bring them back to the index view.
        In add view, create a form that allows the user to add a new animal to the database. On submit, send the animal to the addAnimal action.
        This should add the animal to the Database then redirect them back to the index.-->